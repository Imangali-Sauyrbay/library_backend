version: '3'
services:
  pgsql:
    image: postgres:alpine
    restart: unless-stopped
    container_name: postgre_lib
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./storage/volumes/postgres/data:/var/lib/postgresql/data
      - ./storage/initial_sql/initial_db.sql:/docker-entrypoint-initdb.d/create_schemas.sql
    networks:
      -  postgre-network

  redis:
    image: redis:alpine3.17
    restart: unless-stopped
    container_name: redis_lib
    command: redis-server --save 30 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - './storage/volumes/redis/data:/data'
    networks:
      - redis-network

  meili:
    image: getmeili/meilisearch:v1.1.1
    restart: unless-stopped
    container_name: meili_lib
    command: meilisearch --master-key=${MEILI_KEY}
    environment:
      - http_proxy
    volumes:
      - ./storage/volumes/meili/data:/meili_data
    networks:
      - meili-network

  api:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.local
    container_name: backend_lib
    user: ${UID}:${GID}
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - MEILI_KEY=${MEILI_KEY}
      - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}

    volumes:
      -  ./:/var/www
      -  ./docker/extend-php.ini:/usr/local/etc/php/conf.d/extend-php.ini
    ports:
      - "8000:80"
    depends_on:
      - pgsql
      - redis
      - meili
    networks:
      - redis-network
      - postgre-network
      - meili-network

networks:
  postgre-network:
  redis-network:
  meili-network:
    driver: bridge
